#!/home/roham/miniconda3/bin/snakemake --snakefile
import os
"""
This Snakemake pipeline takes a directory of fastqs as input and for each sample:
    * Runs minimap2
    * Stringtie2 on the alignment and generates gtf and abundance file
    * merges the transcripts from stringti2 
    * Runs the second round of stringti2 using the merged transcripts as reference and -e parameter
"""
###-------input paths/files (I should use a config file before commit) -------###
short_bam_path = "/uru/Data/Nanopore/projects/moth/2020_analysis/sra_rna_data/bam/masked/"
base_out_path = "/dilithium/Data/gmoney/analysis/moth/masked_annotation/" # the base directory of outputs, alignment and stringtie2 directories will be created inside this directory
###--------------###
###------- Extract sample names from fsatq directory -------###

SAMPLESSHORT = [f.split(".")[0] for f in os.listdir(short_bam_path) if f.endswith('_primary.bam')]
print(str(len(SAMPLESSHORT)) + " short samples will be processed!")

# print(str(SAMPLES))
# ###--------------###
# ###------- Pipeline Rules -------#####
rule all:
    input:
        expand( base_out_path + "stringtie2/stringtie2_2nd/{sample2}/{sample2}_ST2_2nd.gtf", sample2=SAMPLESSHORT)

rule stringtie_short_1st:
    input:
    #	expand( base_out_path + "stringtie2/stringtie2_2nd/{sample}/{sample}_ST2_2nd.gtf", sample=SAMPLESSHORT)
        bam = short_bam_path + "{sample2}.bam",
    output:
        base_out_path + "stringtie2/stringtie2_1st/{sample2}/{sample2}_ST2_1st.gtf",

    params:
        DIR = base_out_path + "stringtie2/stringtie2_1st/{sample2}",
        file = "{sample2}_ST2_1st.gtf",


    threads: 10
    message: """First stringtie run..."""
    shell:"""
        /home/roham/software/stringtie/stringtie {input.bam} --conservative -o {params.DIR}/{params.file} -p 48 -v 
    """

rule stringtie_merge:
    input:
 #       expand( base_out_path + "stringtie2/stringtie2_1st/{sample1}/{sample1}_ST2_1st.gtf", sample1=SAMPLESLONG),
        expand( base_out_path + "stringtie2/stringtie2_1st/{sample2}/{sample2}_ST2_1st.gtf", sample2=SAMPLESSHORT)
    output:
          base_out_path + "stringtie2/stringtie2_merge/stringtie2_merged.gtf"
    message: """Merging Transcripts..."""
    shell:"""
        /home/roham/software/stringtie/stringtie --merge -o {output} -c 10 -i {input} -v 
    """


rule stringtie_short_2nd:
    input:
        bam = short_bam_path + "{sample2}.bam",
        ann = rules.stringtie_merge.output
    output:
        base_out_path + "stringtie2/stringtie2_2nd/{sample2}/{sample2}_ST2_2nd.gtf",

    params:
        DIR = base_out_path + "stringtie2/stringtie2_2nd/{sample2}",
        file = "{sample2}_ST2_2nd.gtf",
	abun =  "{sample2}_ST2_1st.abun"
    threads: 50
    message: """Second stringtie run..."""
    shell:"""
        /home/roham/software/stringtie/stringtie {input.bam} -G {input.ann} --conservative -o {params.DIR}/{params.file} -p {threads} -B -e -A {params.DIR}/{params.abun} -v
    """
###--------------###
